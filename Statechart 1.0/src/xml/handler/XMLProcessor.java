package xml.handler;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;

import xml.statechart.Statechart;

public class XMLProcessor {

	public String createXmlFromYakindu(String filePath) {
		String output = "temp.xml";
		
		boolean done = false;
		String type = "";
		String region = "";
		try {
			PrintWriter writer = new PrintWriter(output, "UTF-8");
			BufferedReader reader = new BufferedReader(new FileReader(filePath));
			String line;
			while ((line = reader.readLine()) != null && !done) {
				if (!line.contains("xmi:XMI")) {
					if (line.contains("</sgraph:Statechart>"))
						done = true;
					line = line.replaceAll("sgraph:", "");
					line = line.replaceAll("xmi:id", "id");
					line = line.replaceAll("xsi:type", "type");
					// Tagging the pseudo states generated by Yakindu

					if (line.contains("<regions ")) {
						String afterRegionTag = line.substring(line.indexOf("<regions ")+ "<regions ".length());
						String regionNameStart =afterRegionTag.substring(afterRegionTag.indexOf(" name=\"") + " name=\"".length());
						region = regionNameStart.substring(0, regionNameStart.indexOf("\""));
						region = region.trim();
					}

					if (line.contains(" type=\"")) {
						String typeStart = line.substring(line.indexOf(" type=\"") + " type=\"".length());
						type = typeStart.substring(0, typeStart.indexOf("\"")).trim();
						
						ArrayList<String> addNameToElement = new ArrayList<>();
						addNameToElement.add("Entry");
						addNameToElement.add("FinalState");
						addNameToElement.add("Choice");
						
						if(addNameToElement.contains(type)){
							String prefix = line.substring(0, line.lastIndexOf("\"") + 1);
							String sufix = line.substring(line.lastIndexOf("\"") + 1, line.length());
							
							line = prefix + " name=\"" + type + "\"" + sufix;
						}
						
						
					}
					writer.println(line);
				}
			}
			reader.close();
			writer.close();
		} catch (Exception e) {
			System.err.format("Exception occurred trying to read '%s'.", filePath);
			e.printStackTrace();
		}
		
		return output;
	}

	public Statechart createStatechartFromXml(String filePath) throws Exception {
		JAXBContext jaxbContext = JAXBContext.newInstance(xml.statechart.Statechart.class);
		Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
		File XMLfile = new File(filePath);
		return (Statechart) jaxbUnmarshaller.unmarshal(XMLfile);
	}

	public void writeStatechartToXml(Statechart statechart, String filePath) throws Exception {
		File file = new File(filePath);
		JAXBContext jaxbContext2 = JAXBContext.newInstance(Statechart.class);
		Marshaller jaxbMarshaller = jaxbContext2.createMarshaller();
		jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
		jaxbMarshaller.marshal(statechart, file);
	}
}
